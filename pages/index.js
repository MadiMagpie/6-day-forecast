import Head from 'next/head'
import Image from 'next/image'
import styles from '@/styles/Home.module.css'
import { useState, useEffect, useRef } from 'react'
import axios from 'axios'
import { Flex } from '@/components/Flex'
import Footer from '@/components/Footer'
import { Spacer } from '@/components/Spacer'
import { motion } from 'framer-motion'
import styled from 'styled-components'

const MotionDiv = styled(motion.div)`
display: flex;
flex-direction: column;
align-items: center;
justify-content: center;
padding: 1rem;
border-radius: 1rem;
background-color: #fffbef;
border: 8px solid #4d194c;
`;

export default function Home() {
  const API_KEY = process.env.NEXT_PUBLIC_API_KEY;
  const location = 'vancouver';
  const units  = 'metric';
  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=${units}&appid=${API_KEY}`;
 
  const [data, setData] = useState();
  const grabWeather = useRef(false);

  const fetchWeather = async () => {
    const response = await axios.get(url);
    console.log(response);

    console.log(response.data.list);
    const arrayOfDays = [];

    let weatherData = response.data.list.map((weather, index) =>{
      console.log(parseInt(weather.dt_txt.substr(8, 2), 10))
      let num = parseInt(weather.dt_txt.substr(8, 2), 10)

      if(num !== arrayOfDays.find(element => element == num)){
        arrayOfDays.push(num);
        console.log('here');
        console.log(response.data.list[index]);

        var month = '';
        var icon = '';

        if(weather.dt_txt.substr(5, 2) == 1){
          month = 'January'
        } else if(weather.dt_txt.substr(5, 2) == 2){
          month = 'February'
        } else if(weather.dt_txt.substr(5, 2) == 3){
          month = 'March'
        } else if(weather.dt_txt.substr(5, 2) == 4){
          month = 'April'
        } else if(weather.dt_txt.substr(5, 2) == 5){
          month = 'May'
        } else if(weather.dt_txt.substr(5, 2) == 6){
          month = 'June'
        } else if(weather.dt_txt.substr(5, 2) == 7){
          month = 'July'
        } else if(weather.dt_txt.substr(5, 2) == 8){
          month = 'August'
        } else if(weather.dt_txt.substr(5, 2) == 9){
          month = 'September'
        } else if(weather.dt_txt.substr(5, 2) == 10){
          month = 'October'
        } else if(weather.dt_txt.substr(5, 2) == 11){
          month = 'November'
        } else if(weather.dt_txt.substr(5, 2) == 12){
          month = 'December'
        }

        if(weather.weather[0].main == 'Clouds'){
          icon = '/icons/clouds.png'
        }
        if(weather.weather[0].main == 'Clear'){
          icon = '/icons/clear-sky.png'
        }
        if(weather.weather[0].main == 'Atmosphere'){
          icon = '/icons/mist.png'
        }
        if(weather.weather[0].main == 'Rain'){
          icon = '/icons/broken-clouds.png'
        }
        if(weather.weather[0].main == 'Drizzle'){
          icon = '/icons/rain.png'
        }
        if(weather.weather[0].main == 'Thunderstorm'){
          icon = '/icons/thunderstorm.png'
        }
        if(weather.weather[0].main == 'Snow'){
          icon = '/icons/snow.png'
        }

        var now = new Date(weather.dt_txt);
        var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
        var day = days[now.getDay()];

        return(
          <MotionDiv
          initial = {{
            opacity:0
          }}
          animate = {{
            opacity:1
          }}
          transition = {{
            delay: {index} * 0.5
          }}
            key = {index}
          >
            <p className = {styles.date}>
                {day} {month} {weather.dt_txt.substr(8, 2)}, {weather.dt_txt.substr(0, 4)}
            </p>
            <Image 
              src = {icon}
              alt = {icon}
              width = {180}
              height = {180}
              priority
            />
            <div className = {styles.temp}>
              {weather.main.temp.toFixed(1)}Â°C
            </div>
            <Spacer size = {15}/>
            <div className = {styles.type}>
              {weather.weather[0].main}
            </div>
          </MotionDiv>
        )
      }
    })
    console.log(arrayOfDays);
    setData(weatherData);
  }

  useEffect(() => {
    // if(grabWeather.current === true){
      fetchWeather();
    return() => {
      grabWeather.current = true;
    }
  }, []);

  const current = new Date();
  const date = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()}`;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main className={styles.main}>
        <Flex dir = 'column'>
        <div>
            <Image 
            className = {styles.logo}
            src = '/weather-forecast-logo.png'
            alt = 'weather'
            width={550}
            height={250}
            priority
          />
        </div>
        <Flex flex = '1' gap = '1em'>
          <p className = {styles.location}>
          Vancouver BC Weather
          </p>
          <p className = {styles.updated}>
          Last updated: {date}
          </p>
        </Flex>
        
        
        </Flex>
        
       <Flex dir = 'row'
        flexWrap = 'wrap'
        align = 'center'
        gap = '2em'
        justify = 'center'
        >
        {data}
       </Flex>
      </main>
      <Footer/>
    </>
  )
}
